service:
  name: ying-note-api

plugins:
  - serverless-plugin-scripts
  - serverless-webpack
  - serverless-prune-plugin

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-northeast-2
  stage: ${env:STAGE}
  tracing:
    apiGateway: true
    lambda: true
  apiGateway:
    binaryMediaTypes:
      - "image/*"
  environment:
    REDIS_HOST: ${env:REDIS_HOST}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD}
    BUCKET_NAME: ${env:BUCKET_NAME}
    PUBLIC_URL: ${env:PUBLIC_URL}
    BOTTOM_HALF_LAMBDA_NAME: ${self:custom.bottomHalfLambdaName}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
        - "s3:DeleteObject"
      Resource:
        - "arn:aws:s3:::${env:BUCKET_NAME}/*"
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::${env:BUCKET_NAME}"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - Fn::Join:
            - ":"
            - - "arn:aws:lambda"
              - Ref: "AWS::Region"
              - Ref: "AWS::AccountId"
              - "function"
              - ${self:custom.bottomHalfLambdaName}
  usagePlan:
    quota:
      limit: 100000
      period: DAY
    throttle:
      burstLimit: 240
      rateLimit: 60

custom:
  bottomHalfLambdaName: ${self:service.name}-${self:provider.stage}-bottomHalf
  prune:
    automatic: true
    number: 7
  scripts:
    hooks:
      "webpack:package:packExternalModules": /bin/bash .prepackage.sh

package:
  individually: true

functions:
  getNote:
    handler: src/store/note/get.handle
    timeout: 6
    memorySize: 256
    events:
      - http:
          method: get
          path: /api/{noteId}
          cors: true
  putNote:
    handler: src/store/note/put.handle
    timeout: 6
    memorySize: 256
    events:
      - http:
          method: put
          path: /api/{noteId}
          cors: true
  deleteNote:
    handler: src/store/note/delete.handle
    timeout: 6
    memorySize: 256
    events:
      - http:
          method: delete
          path: /api/{noteId}
          cors: true
  putComment:
    handler: src/store/comment/put.handle
    timeout: 6
    memorySize: 256
    events:
      - http:
          method: put
          path: /api/{noteId}/comment
          cors: true
  deleteComment:
    handler: src/store/comment/delete.handle
    timeout: 6
    memorySize: 256
    events:
      - http:
          method: delete
          path: /api/{noteId}/comment/{commentId}
          cors: true
  bottomHalf:
    handler: src/store/actor/actor.bottomHalf
    timeout: 36
    memorySize: 256
  serve:
    handler: src/html/serve.handle
    timeout: 10
    memorySize: 512
    events:
      - http: GET /
      - http: GET /{file}
      - http: GET /static/css/{file}
      - http: GET /static/js/{file}
      - http: GET /static/media/{file}
      - http: GET /note/{file}

resources:
  Resources:
    DistBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:BUCKET_NAME}
